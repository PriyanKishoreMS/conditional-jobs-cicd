name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [serverless-start, serverless-extra]

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18.x

      - name: Install dependencies
        run: |
          cd ${{ matrix.service }}
          npm install

      - name: Debug build outputs
        run: |
          echo "needs.build.outputs: ${{ needs.build.outputs.step1_changed }}"
          echo "needs.build.outputs.step2_changed: ${{ needs.build.outputs.step2_changed }}"
          echo "SERVICE1_CHANGED=${{ env.SERVICE1_CHANGED }}"
          echo "SERVICE2_CHANGED=${{ env.SERVICE2_CHANGED }}"

      # - name: Run tests
      #   if: needs.build.outputs.step1_changed == 'true' && matrix.service == 'serverless-start'
      #   run: |
      #     # Your test commands here

  deploy:
    needs: build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [serverless-start, serverless-extra]

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Determine changes - serverless-start
        id: step1
        run: |
          CHANGED_COMMITS=$(curl -s "https://api.github.com/repos/${{ github.repository }}/compare/${{ github.event.before }}...${{ github.sha }}" | jq -r '.commits[].sha')

          for COMMIT in $CHANGED_COMMITS; do
            echo "Commit $COMMIT"
            FILES_CHANGED=$(curl -s "https://api.github.com/repos/${{ github.repository }}/commits/$COMMIT" | jq -r '.files | map(select(.filename | startswith("serverless-start/"))) | length')
            echo "Commit $COMMIT has $FILES_CHANGED files in 'serverless-start/'"

            if [ "$FILES_CHANGED" -gt 0 ]; then
              echo "Changes detected in commit $COMMIT for 'serverless-start/'"
              SERVICE1_CHANGED=true
              break
            else
              echo "No changes in commit $COMMIT for 'serverless-start/'"
            fi
          done

          echo "SERVICE1_CHANGED=${SERVICE1_CHANGED}"

      - name: Determine changes - serverless-extra
        id: step2
        run: |
          CHANGED_COMMITS=$(curl -s "https://api.github.com/repos/${{ github.repository }}/compare/${{ github.event.before }}...${{ github.sha }}" | jq -r '.commits[].sha')

          for COMMIT in $CHANGED_COMMITS; do
            echo "Commit $COMMIT"
            FILES_CHANGED=$(curl -s "https://api.github.com/repos/${{ github.repository }}/commits/$COMMIT" | jq -r '.files | map(select(.filename | startswith("serverless-extra/"))) | length')
            echo "Commit $COMMIT has $FILES_CHANGED files in 'serverless-extra/'"

            if [ "$FILES_CHANGED" -gt 0 ]; then
              echo "Changes detected in commit $COMMIT for 'serverless-extra/'"
              SERVICE2_CHANGED=true
              break
            else
              echo "No changes in commit $COMMIT for 'serverless-extra/'"
            fi
          done

          echo "SERVICE2_CHANGED=${SERVICE2_CHANGED}"

      - name: Debug outputs
        run: |
          echo "SERVICE1_CHANGED=${{ env.SERVICE1_CHANGED }}"
          echo "SERVICE2_CHANGED=${{ env.SERVICE2_CHANGED }}"

      - name: Deploy to Serverless - serverless-start
        if: ${{ env.SERVICE1_CHANGED == 'true' && matrix.service == 'serverless-start' }}}
        run: |
          cd serverless-start
          npx serverless deploy

      - name: Deploy to Serverless - serverless-extra
        if: ${{ env.SERVICE2_CHANGED == 'true' && matrix.service == 'serverless-extra' }}}
        run: |
          cd serverless-extra
          npx serverless deploy

        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
