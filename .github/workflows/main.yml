name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [serverless-start, serverless-extra]

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18.x

      - name: Install dependencies
        run: |
          cd ${{ matrix.service }}
          npm install

      # - name: Run tests
      #   run: |
      #    npm run test

  conditional-deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Deploy to Serverless
        run: |
          deploy_service() {
            SERVICE_NAME=$1

            CHANGED_COMMITS=$(curl -s "https://api.github.com/repos/${{ github.repository }}/compare/${{ github.event.before }}...${{ github.sha }}" | jq -r ".commits[].sha")

            SERVICE_CHANGED=false
            for COMMIT in $CHANGED_COMMITS; do
              echo "Commit $COMMIT"
              FILES_CHANGED=$(curl -s "https://api.github.com/repos/${{ github.repository }}/commits/$COMMIT" | jq -r ".files | map(select(.filename | startswith('${SERVICE_NAME}/'))) | length")
              echo "Commit $COMMIT has $FILES_CHANGED files in '${SERVICE_NAME}/'"

              if [ "$FILES_CHANGED" -gt 0 ]; then
                echo "Changes detected in commit $COMMIT for '${SERVICE_NAME}/'"
                SERVICE_CHANGED=true
                break
              else
                echo "No changes in commit $COMMIT for '${SERVICE_NAME}/'"
              fi
            done

            echo "SERVICE_CHANGED=${SERVICE_CHANGED}"

            if [ "$SERVICE_CHANGED" = true ]; then
              cd $SERVICE_NAME
              npx serverless deploy
            else
              echo "No changes for '${SERVICE_NAME}'. Skipping deploy."
            fi
          }

          deploy_service "serverless-start"
          deploy_service "serverless-extra"

        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
